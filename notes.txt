üöÄ O que √© Git?

Git √© um sistema de controle de vers√£o. Ele permite que voc√™:
- Salve o hist√≥rico das altera√ß√µes no seu projeto.
- Volte no tempo se algo der errado.
- Trabalhe com outras pessoas no mesmo projeto sem bagun√ßa.

‚úÖ Comandos b√°sicos:

1. git init
Cria um novo reposit√≥rio Git na pasta atual.
Inicia o rastreamento de altera√ß√µes do projeto.

2. git status
Mostra o estado atual dos arquivos no reposit√≥rio.
Indica arquivos modificados, adicionados ou deletados.

3. git add .
Adiciona todos os arquivos modificados para a √°rea de stage.
O ponto (.) significa "todos os arquivos".

 (use "git rm --cached <file>..." to unstage)


4. git commit -m "mensagem"
Salva as mudan√ßas adicionadas com uma mensagem explicativa.
A mensagem deve dizer o que foi feito na altera√ß√£o.

5. git log
Mostra o hist√≥rico de commits.
Exibe ID, autor, data e mensagem de cada commit.

üîß Outros comandos essenciais:

- git clone [URL]
Clona um reposit√≥rio remoto para sua m√°quina.
Ex: git clone https://github.com/usuario/repositorio.git

- git branch
Lista as branches do projeto.

- git checkout -b nome-da-branch
Cria e muda para uma nova branch.

- git checkout nome-da-branch
Muda para uma branch existente.

- git merge nome-da-branch
Junta a branch informada com a branch atual.

- git pull
Baixa as mudan√ßas mais recentes do reposit√≥rio remoto.

- git push
Envia os commits locais para o reposit√≥rio remoto.



üí° Dicas pr√°ticas:

- Sempre rode git status antes de fazer um commit.
- Commits pequenos e frequentes facilitam o rastreamento.
- Use mensagens de commit claras e objetivas.

